Component {

        id: customermobilenumber

        Item {
            id: customermobilenumber
            width: parent.width
            height: parent.height
            property string totalPrice 
            property string source
            property string id
            property string liveprice
            property string liveprice22
            property string stoneid
            property string size
            property string silverliveprice
            property string liveprice24

             Component.onCompleted: {
                backend.capture_trigger("Start")
                

                if(language == "hindi"){
                    headingText.text = "कृपया अपना मोबाइल नंबर दर्ज करें"
                    mobileInput.placeholderText = "       अपना मोबाइल संख्या दर्ज करे "
                    mobileverificationbtn.text = "<font color='#000000'> भेजना </font>"
                    backbtn.text = "<font color='#000000'> पीछे </font>"
                }else if(language == "english"){
                    headingText.text = "Please Enter Your Mobile Number"
                    mobileInput.placeholderText = "       eg: xxxxxxxx39 "
                    mobileverificationbtn.text = "<font color='#000000'> Submit </font>"
                    backbtn.text = "<font color='#000000'> Back </font>"    
                }else if(language == "telugu"){
                    headingText.text = "దయచేసి మీ మొబైల్ నంబర్‌ను నమోదు చేయండి "
                    mobileInput.placeholderText = "       మీ మొబైల్ నెంబర్ ను ఎంటర్ చేయండి "
                    mobileverificationbtn.text = "<font color='#000000'> పంపండి </font>"
                    backbtn.text = "<font color='#000000'> వెనుకకు </font>"
                        
                }
            
            }

            Rectangle {
                id: rec1
                width: parent.width
                height: 80
                color: '#1A2e22'
                anchors.bottomMargin: 30
                anchors.topMargin: 30
                anchors.leftMargin: 100 
                anchors.rightMargin: 100

                Image{
                    id: image2
                    width: 155
                    height: 60
                    source: '../assets/gslogo.png'
                    anchors.rightMargin: 100
                    anchors.verticalCenter: parent.verticalCenter
                    anchors.right: parent.right
                }

                Image{
                        id: image3
                        width: 155
                        height: 80
                        source: '../asets/Matrika.png'
                        anchors.verticalCenter: parent.verticalCenter
                        anchors.left: parent.left
                    }

                Image{
                    width: parent.width
                    height: 5
                    anchors.topMargin: 20
                    anchors.top: image2.bottom
                    source: '../assets/goldline.png'
                    fillMode: Image.PreserveAspectCrop
                    clip: true
                }
            }

            GridLayout {
                id: grid
                anchors.fill: parent
                rows    : 10
                columnSpacing: 0
                columns : 12
                width: parent.width
                anchors.topMargin: 150     
                property double colMulti : grid.width / grid.columns
                property double rowMulti : grid.height / grid.rows

                function prefWidth(item){
                    return colMulti * item.Layout.columnSpan
                }

                function prefHeight(item){
                    return rowMulti * item.Layout.rowSpan
                }

                Rectangle {
                    id: leftrec
                    color: '#1A2e22'
                    Layout.rowSpan   : 10
                    Layout.columnSpan: 4
                    Layout.preferredWidth  : grid.prefWidth(this)
                    Layout.preferredHeight : grid.prefHeight(this)

                    Button {
                        id: backbtn
                        height: 70
                        anchors.bottomMargin: 30
                        anchors.bottom: parent.bottom                            
                        text: '<font color="#000000"> Back </font>'
                        highlighted: true
                        flat: false
                        padding: 25
                        width: parent.width/3*2 + 80
                        palette.buttonText: "black"
                        font.weight: Font.Bold
                        font.pointSize: 20
                        icon.height: 14
                        icon.width: 14
                        checkable: true
                        background: Rectangle {
                            color: "gold"
                            border.width: 1
                            border.color: "blue"
                            radius: 10
                        }

                        Connections {
                            onClicked: {
                                stack.pop(StackView.Immediate) 
                                //stack.clear()
                                //stack.push(productsscreen, StackView.Immediate)
                                //lockstatus = false
                                //backend.pricespage("show")
                            }
                        }
                    }
                }

                Item {
                    width: 400
                    height: 300
                    // Center the content in the parent
                    anchors.centerIn: parent

                    Rectangle {
                        id: middlerec
                        width: parent.width
                        height: parent.height
                        color: '#1A2e22'
                        Layout.rowSpan   : 10
                        Layout.columnSpan: 4
                        Layout.preferredWidth  : grid.prefWidth(this)
                        Layout.preferredHeight : grid.prefHeight(this)

                        Text {
                            id: headingText
                            text: ' Please Enter Your Mobile Number'
                            font.bold : true
                            font.pixelSize : 37
                            color: '#fff'
                            topPadding: -300
                            font.family: Bahnschrift.font.family
                            anchors.horizontalCenter: parent.horizontalCenter
                        }

                        TextField {
                            id: mobileInput
                            height: 70
                            anchors.topMargin: 45
                            anchors.horizontalCenter: parent.horizontalCenter 
                            anchors.top: headingText.bottom
                            //horizontalAlignment: TextInput.AlignHCenter
                            verticalAlignment: TextInput.AlignVCenter 
                            placeholderText: "eg: xxxxxxxx39"                        
                            width: 320
                            palette.buttonText: "black"
                            font.weight: Font.Bold
                            font.pointSize: 20
                            background: Rectangle {
                                color: "lightblue"
                                border.width: 1
                                border.color: "red"
                                radius: 10
                            }
                            

                           
                            
                            onTextChanged: {
                                // Filter out any characters that are not digits
                                var filteredText = text.replace(/\D/g, ""); // \D matches any non-digit character
                                if (filteredText !== text) {
                                    // If text was modified, update it
                                    text = filteredText;
                                }
                        
                                mobileverificationbtn.enabled = mobileInput.text.length === 10;
                                errorLabel.visible = mobileInput.text.length !== 10;
                            }

                            onFocusChanged: {
                                if (focus) focusedInput = mobileInput;
                            }
                        }

                        Label {
                            id: errorLabel
                            text: "<h2> Please enter a valid 10-digit number. </h2>"
                            color: "red"
                            visible: false
                            anchors.top: mobileInput.bottom
                            anchors.horizontalCenter: parent.horizontalCenter
                        }

                        Button {
                            id: mobileverificationbtn
                            height: 70
                            anchors.top: virtiual.bottom
                            anchors.topMargin:  150                          
                            text: '<font color="#000000"> Submit </font>'
                            enabled: false
                            highlighted: true
                            flat: false
                            padding: 25
                            width: parent.width / 3 * 2 + 150
                            palette.buttonText: "black"
                            font.weight: Font.Bold
                            font.pointSize: 20
                            icon.height: 14
                            icon.width: 14
                            checkable: true
                            background: Rectangle {
                                color: "gold"
                                border.width: 1
                                border.color: "blue"
                                radius: 10
                            }

                            Connections {
                                onClicked: {
                                    var mobilenumber = mobileInput.text;
                                    backend.customermobilenumber_trigger(mobilenumber);
                                    stack.push(productsscreen, StackView.Immediate)
                                    backend.play_trigger("customer", language)
                                    
                                }
                            }
                        }

                        Rectangle {
                            id:virtiual
                            width: 320
                            height: 400
                            anchors.topMargin: 50 
                            anchors.top:errorLabel.bottom 
                            anchors.centerIn: parent      
                            color: "#FFD700"
                            border.width: 1
                            border.color: "#013106"
                            radius: 10

                            GridLayout {
                                Rectangle { width: 70;}
                                        rows: 4
                                        columns: 3
                                        Rectangle { width: 70;} 
                                        anchors.centerIn: parent                               
                                        opacity: numpadVisible ? 1 : 0

                                    Button {
                                        
                                        text: "Del"
                                        font.pixelSize: 34
                                        width: 50
                                        height: 10
                                        background: Rectangle {
                                            color: "#e74c3c" // Button color
                                            radius: 20
                                        }
                                        onClicked: {
                                            if (mobileInput.text.length > 0) {
                                                mobileInput.text = mobileInput.text.slice(0, -1);
                                            }
                                        }
                                    }

                                    Repeater {
                                                model: 10
                                                Button {
                                                    text: (index === 9) ? "0" : (index + 1).toString()
                                                    font.pixelSize: 50
                                                    // color: "#ffffff" // Text color
                                                    background: Rectangle {
                                                        color: "#0A3502" // Button color
                                                        radius: 20
                                                        width: 50
                                                        height: 10
                                                    }
                                                       onClicked: {
                                                            if (focusedInput) {
                                                                var cursorPosition = focusedInput.cursorPosition;
                                                                var textToInsert = (index === 9) ? "0" : (index + 1).toString();
                                                                focusedInput.text = focusedInput.text.slice(0, cursorPosition) + textToInsert + focusedInput.text.slice(cursorPosition);
                                                                focusedInput.cursorPosition = cursorPosition + textToInsert.length;
                                                            }
                                                        }
                                                }
                                    }
                                
                            }
                        }
                    }
                }
            }
        }
    }